---
title: "Pinellas County Water Quality Exploratory Data Analysis"
subtitle: "Generated `r format(Sys.Date(), '%B %d, %Y')`"
format: 
  html:
    grid:
      body-width: 900px
      margin-width: 380px
    toc: true
    toc-expand: true
    colorlinks: true
---

```{r setup, include=FALSE}
library(tidyverse)
library(readxl)
library(psych)
library(gt)
library(cowplot)
library(PerformanceAnalytics)
library(lattice)


# Read in data:
dat <- data.frame(read_excel('Data/Pinellas_County_Water_Quality_Data_2003_2024.xlsx', guess_max = 50000))

#'**********************FUNCTIONS**********************

# Get summary stats
stat <- function(site){
  data.frame(describe(select(site, 4:ncol(site))) |> 
  select(-c(vars,trimmed,mad,range))) |>
  add_column(Vars = names(site[4:ncol(site)]), .before=1) 
}

# Summary stats table
sumtbl <- function(data,title){
  gt(data) |> 
    tab_header(title = title) |> 
    fmt_number(columns = 3:ncol(data), decimals = 2) |>
  cols_align(
    align = c("center"),
    columns = everything()
    )
}

# Histograms
histplt <- function(site, bins){
  lapply(names(site)[4:ncol(site)], function(col_name){
  ggplot(site[4:ncol(site)] |> drop_na(), aes_string(x = col_name)) +
    geom_histogram(bins=bins,color = 'black', fill = 'lightblue') +
    theme_minimal(base_size=15) +
    ggtitle(NULL) +
    xlab(col_name) +
    ylab('Frequency') +
    theme(axis.title.x = element_text(size=8),
          axis.title.y = element_text(size=8),
          axis.text.x = element_text(size=7, angle =45),
          axis.text.y = element_blank())
  })
}

# Boxplots
boxplt <- function(site, bins){
  lapply(names(site)[4:ncol(site)], function(col_name){
  ggplot(site |> drop_na(), aes_string(x = col_name)) +
    geom_boxplot(color = 'black', fill = 'lightblue') +
    theme_minimal(base_size=15) +
    ggtitle(NULL) +
    xlab(NULL) +
    ylab(col_name) +
    theme(axis.title.x = element_text(size=8),
          axis.title.y = element_text(size=8),
          axis.text.x = element_text(size=7, angle =45),
          axis.text.y = element_blank())
  })
}

# Time-series plot
tsplt <- function(site){
  lapply(names(site)[4:ncol(site)], function(col_name) {
  ggplot(site, aes_string(x = "Date", y = col_name)) +
    geom_line() +
    theme_minimal(base_size = 15) +
    ggtitle(NULL) +
    xlab(NULL) +
    ylab(col_name) +
    theme(axis.title.x = element_text(size = 8),
          axis.title.y = element_text(size = 8),
          axis.text.x = element_text(size = 7, angle = 45, hjust = 1),
          axis.text.y = element_text(size=7),
          panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.5))
  })
}

# Plot grid 
pgrid <- function(pfunc, lab){
  p1 <- plot_grid(plotlist = pfunc, align="v",nrow=4)
  title <- ggdraw() + draw_label(lab, 
                                 fontface = 'bold', size = 16)
  plot_grid(title, p1, nrow = 2, rel_heights = c(0.1, 1))
}


```

# Eastern Stata

```{r, include=FALSE}
# Get East strata data and do averaging of dates:
Estr <- dat |>
  filter(substr(Site,1,1) == 'E') |>
  mutate(TN = TKN + NOX, Site = substr(Site,1,2)) |>
  select(Site,Date,Level,Secchi,Temp_Water, pH, DO_sat = DO., DO, 
         Conductivity = Sp.Conductivity, Salinity, TN, TP, Chl.a,
         TSS, Turbidity) |>
  group_by(Site,Date, Level) |>
  summarise(across(everything(), mean, na.rm = TRUE)) |>
  ungroup() |>
  as.data.frame()

Esur <- Estr |>
  filter(Level == 'Surface') 

Ebot <- Estr |>
  filter(Level == 'Bottom') |>
  select(1:10)

```

## Surface Data

```{r, echo=FALSE}
sumtbl(stat(Esur), "Eastern Strata Surface Water Quality Summary Statistics")
pgrid(histplt(Esur,30), "Eastern Strata Surface Water Quality Histograms")
pgrid(boxplt(Esur,30), "Eastern Strata Surface Water Quality Boxplots")
pgrid(tsplt(Esur), "Eastern Strata Surface Water Quality Time Series")
chart.Correlation(Esur[4:ncol(Esur)], histogram=TRUE, method = 'spearman')
```

## Bottom Data

```{r, echo=FALSE}
sumtbl(stat(Ebot), "Eastern Strata Bottom Water Quality Summary Statistics")
pgrid(histplt(Ebot,30), "Eastern Strata Bottom Water Quality Histograms")
pgrid(boxplt(Ebot,30), "Eastern Strata Bottom Water Quality Boxplots")
pgrid(tsplt(Ebot), "Eastern Strata Bottom Water Quality Time Series")
chart.Correlation(Ebot[4:10], histogram=TRUE, method = 'spearman')
```

# Western Strata

```{r, include=FALSE}
# Get West strata data and do averaging of dates:
Wstr <- dat |>
  filter(substr(Site,1,1) == 'W') |>
  mutate(TN = TKN + NOX, Site = substr(Site,1,2)) |>
  select(Site,Date,Level,Secchi,Temp_Water, pH, DO_sat = DO., DO,
         Conductivity = Sp.Conductivity, Salinity, TN,TP, Chl.a,
         TSS, Turbidity) |>
  group_by(Site,Date, Level) |>
  summarise(across(everything(), mean, na.rm = TRUE)) |>
  ungroup() |>
  as.data.frame()

Wsur <- Wstr |>
  filter(Level == 'Surface')

Wbot <- Wstr |>
  filter(Level == 'Bottom') |>
  select(1:10)
```

## Surface Data

```{r, echo=FALSE}
sumtbl(stat(Wsur), "Western Strata Surface Water Quality Summary Statistics")
pgrid(histplt(Wsur,30), "Western Strata Surface Water Quality Histograms")
pgrid(boxplt(Wsur,30), "Western Strata Surface Water Quality Boxplots")
pgrid(tsplt(Wsur), "Western Strata Surface Water Quality Time Series")
chart.Correlation(Wsur[4:ncol(Wsur)], histogram=TRUE, method = 'spearman')
```

## Bottom Data

```{r, echo=FALSE}
sumtbl(stat(Wbot), "Western Strata Bottom Water Quality Summary Statistics")
pgrid(histplt(Wbot,30), "Western Strata Bottom Water Quality Histograms")
pgrid(boxplt(Wbot,30), "Western Strata Bottom Water Quality Boxplots")
pgrid(tsplt(Wbot), "Western Strata Bottom Water Quality Time Series")
chart.Correlation(Wbot[4:10], histogram=TRUE, method = 'spearman')
```

# Lake Tarpon

```{r, include=FALSE}

# Get West strata data and do averaging of dates:
LT <- dat |>
  filter(substr(Site,1,1) == 'L') |>
  mutate(TN = TKN + NOX, Site = substr(Site,1,2)) |>
  select(Site,Date,Level,Secchi,Temp_Water, pH, DO_sat = DO., DO,
         Conductivity = Sp.Conductivity, Salinity, TN, TP, Chl.a,
         TSS, Turbidity, Alkalinity = Alkalinity_total, E_coli, Color) |>
  group_by(Site,Date, Level) |>
  summarise(across(everything(), mean, na.rm = TRUE)) |>
  ungroup() |>
  as.data.frame()

Lsur <- LT |>
  filter(Level == 'Surface')

Lbot <- LT |>
  filter(Level == 'Bottom') |>
  select(1:10)

```

## Surface Data

```{r, echo=FALSE}
sumtbl(stat(Lsur), "Lake Tarpon Surface Water Quality Summary Statistics")
pgrid(histplt(Lsur,15), "Lake Tarpon Surface Water Quality Histograms")
pgrid(boxplt(Lsur,15), "Lake Tarpon Surface Water Quality Boxplots")
pgrid(tsplt(Lsur), "Lake Tarpon Surface Water Quality Time Series")
chart.Correlation(Lsur[4:ncol(Lsur)], histogram=TRUE, method = 'spearman')
```

## Bottom Data

```{r, echo=FALSE}
sumtbl(stat(Lbot), "Lake Tarpon Bottom Water Quality Summary Statistics")
pgrid(histplt(Lbot,15), "Lake Tarpon Bottom Water Quality Histograms")
pgrid(boxplt(Lbot,15), "Lake Tarpon Bottom Water Quality Boxplots")
pgrid(tsplt(Lbot), "Lake Tarpon Bottom Water Quality Time Series")
chart.Correlation(Lbot[4:10], histogram=TRUE, method = 'spearman')
```

# Lake Seminole

```{r, include=FALSE}

# Get Lake Seminole data and do averaging of dates:
LS <- dat |>
  filter(substr(Site,1,1) == 'S') |>
  mutate(TN = TKN + NOX, Site = substr(Site,1,2)) |>
  select(Site,Date,Level,Secchi,Temp_Water, pH, DO_sat = DO., DO,
         Conductivity = Sp.Conductivity, Salinity, TN, TP, Chl.a,
         TSS, Turbidity, Alkalinity = Alkalinity_total, E_coli, Color) |>
  group_by(Site,Date, Level) |>
  summarise(across(everything(), mean, na.rm = TRUE)) |>
  ungroup() |>
  as.data.frame()

SAsur <- LS |>
  filter(Site == 'SA' & Level == 'Surface')
SAbot <- LS |>
  filter(Site == 'SA' & Level == 'Bottom') |>
  select(1:10)

SBsur <- LS |>
  filter(Site == 'SB' & Level == 'Surface')
SBbot <- LS |>
  filter(Site == 'SB' & Level == 'Bottom') |>
  select(1:10)

LSsur <- LS |>
  filter(Level == 'Surface')

LSbot <- LS |>
  filter(Level == 'Bottom') |>
  select(1:10)

```


## North Lobe Surface Data

```{r, echo=FALSE}
sumtbl(stat(SAsur), "Lake Seminole North Lobe Surface Water Quality Summary Statistics")
pgrid(histplt(SAsur,15), "Lake Seminole North Lobe Surface Water Quality Histograms")
pgrid(boxplt(SAsur,15), "Lake Seminole North Lobe Surface Water Quality Boxplots")
pgrid(tsplt(SAsur), "Lake Seminole North Lobe Surface Water Quality Time Series")
chart.Correlation(SAsur[4:ncol(SAsur)], histogram=TRUE, method = 'spearman')
```

## North Lobe Bottom Data

```{r, echo=FALSE}
sumtbl(stat(SAbot), "Lake Seminole North Lobe Bottom Water Quality Summary Statistics")
pgrid(histplt(SAbot,15), "Lake Seminole North Lobe Bottom Water Quality Histograms")
pgrid(boxplt(SAbot,15), "Lake Seminole North Lobe Bottom Water Quality Boxplots")
pgrid(tsplt(SAbot), "Lake Seminole North Lobe Bottom Water Quality Time Series")
chart.Correlation(SAbot[4:10], histogram=TRUE, method = 'spearman')
```

## South Lobe Surface Data

```{r, echo=FALSE}
sumtbl(stat(SBsur), "Lake Seminole South Lobe Surface Water Quality Summary Statistics")
pgrid(histplt(SBsur,15), "Lake Seminole South Lobe Surface Water Quality Histograms")
pgrid(boxplt(SBsur,15), "Lake Seminole South Lobe Surface Water Quality Boxplots")
pgrid(tsplt(SBsur), "Lake Seminole South Lobe Surface Water Quality Time Series")
chart.Correlation(SBsur[4:ncol(SBsur)], histogram=TRUE, method = 'spearman')
```

## South Lobe Bottom Data

```{r, echo=FALSE}
sumtbl(stat(SBbot), "Lake Seminole South Lobe Bottom Water Quality Summary Statistics")
pgrid(histplt(SBbot,15), "Lake Seminole South Lobe Bottom Water Quality Histograms")
pgrid(boxplt(SBbot,15), "Lake Seminole South Lobe Bottom Water Quality Boxplots")
pgrid(tsplt(SBbot), "Lake Seminole South Lobe Bottom Water Quality Time Series")
chart.Correlation(SBbot[4:10], histogram=TRUE, method = 'spearman')
```

## Combined Surface Data

```{r, echo=FALSE}
sumtbl(stat(LSsur), "Lake Seminole Combined Surface Water Quality Summary Statistics")
pgrid(histplt(LSsur,15), "Lake Seminole Combined Surface Water Quality Histograms")
pgrid(boxplt(LSsur,15), "Lake Seminole Combined Surface Water Quality Boxplots")
pgrid(tsplt(LSsur), "Lake Seminole Combined Surface Water Quality Time Series")
chart.Correlation(LSsur[4:ncol(LSsur)], histogram=TRUE, method = 'spearman')
```

## Combined Bottom Data

```{r, echo=FALSE}
sumtbl(stat(LSbot), "Lake Seminole Combined Bottom Water Quality Summary Statistics")
pgrid(histplt(LSbot,15), "Lake Seminole Combined Bottom Water Quality Histograms")
pgrid(boxplt(LSbot,15), "Lake Seminole Combined Bottom Water Quality Boxplots")
pgrid(tsplt(LSbot), "Lake Seminole Combined Bottom Water Quality Time Series")
chart.Correlation(LSbot[4:10], histogram=TRUE, method = 'spearman')
```


# 01-01: Anclote River

# 01-09: Hollin Creek

# 01-12: Anclote River

# 02-02: Klosterman Creek

# 02-09: Klosterman Creek

# 04-02: Brooker Creek

# 04-03: Brooker Creek

# 04-04: Brooker Creek

# 05-05: Moccasin Creek

# 06-03: Cow Branch

# 06-06: Tarpon Outfall

# 08-03: Bee Branch

# 09-02: Cedar Creek

# 10-02: Curlew Creek

# 10-06: Jerry Creek

# 11-05: Briar Creek

# 12-02: Bishop Creek (N Branch)

# 12-06: Bishop Creek (S Branch)

# 13-05: Mullet Creek

# 14-02: Lake Chautauqua

# 14-07: Alligator Lake

# 14-10: Alligator Creek

# 15-04: Spring Branch

# 17-01: Rattlesnake Creek

# 17-03: Rattlesnake Creek

# 18-06: Stevenson Creek

# 19-02: Allens Creek (Belcher Rd)

# 19-08: Allens Creek (Nursery Rd)

# 19-10: Allens Creek (Kent Place)

# 19-12: Allens Creek (Beverly Dr)

# 19-13: Allens Creek (Winchester Rd)

# 22-01: Longranch (Whitney Rd)

# 22-12: Longranch (East Bay)

# 22-16: Longranch (Oak Crest)

# 24-01: Cross Bayou (Park Blvd)

# 24-02: Cross Bayou (Coast Guard)

# 25-02: Seminole Canal (Ulmerton)

# 25-07: Seminole Canal (86th Ave)

# 25-09: 126th Ave N

# 27-01: McKay Creek (Indian Rocks)

# 27-08: Church Creek

# 27-10: McKay Creek Reservoir

# 27-11: McKay Creek (25th St)

# 27-14: McKay Creek (Hickory Dr)

# 28-01: Bay Point North

# 28-02: Bay Point South

# 29-11: PPD #1

# 35-01: PPD #5

